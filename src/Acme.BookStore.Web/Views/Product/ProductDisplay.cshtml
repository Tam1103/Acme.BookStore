@{
    ViewData["Title"] = "ProductDisplay";
}

@using X.PagedList
@using X.PagedList.Mvc.Core
<script src="~/Views/Product/ProductDisplay.js"></script>
<div class="content">
    <div class="content_top">
        <div class="heading">
            <h3>
                @ViewBag.nameCategory
            </h3>
        </div>
        <div class="clear"></div>
    </div>
    <h1 style="text-align:center;color:darkred;font-size:30px;font-weight:bold">@ViewBag.notification</h1>
    <div class="section group">
        @foreach (var product in @ViewBag.products)
        {
            var photo = product.Image;
            <div class="grid_1_of_4 images_1_of_4">
                @if (photo != null)
                {
                    <a asp-controller="product" asp-action="details" asp-route-id="@product.Id"><img src="~/images/@photo" alt="" /></a>
                }
                else
                {
                    <a href="preview.html"><img src="~/images/default.png" alt="featured_image_none" /></a>
                }
                <h2>@product.Name</h2>
                <div class="price-details">
                    <div class="price-number">
                        <p><span class="rupees">@product.Price<span class="input-group-addon"></span></span></p>
                    </div>
                    <div class="add-cart">
                        <h4><a href="javascript:void(0)">Add to Cart</a></h4>
                    </div>
                    <div class="clear"></div>
                </div>
            </div>
        }
    </div>

    @if (ViewBag.products.Count >= 1)
    {
        @Html.PagedListPager((IPagedList)ViewBag.products, page => Url.Action("productdisplay", "product", new
            { page = page, id = ViewBag.category }))
    }
</div>
